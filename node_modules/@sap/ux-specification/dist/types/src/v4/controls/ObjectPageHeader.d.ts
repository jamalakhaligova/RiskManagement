import type { HeaderSections } from './ObjectPageHeaderSection';
import type { ActionAfterExecutionConfiguration } from '../webapp/manifest/ManifestSettings';
import type { CustomActionOP, CustomActionPositionOP } from './CustomAction';
export interface ActionAfterExecutionConfigurationObjectPageHeader extends ActionAfterExecutionConfiguration {
}
export interface CustomHeaderActionPositionOP extends CustomActionPositionOP {
}
export interface CustomHeaderActionOP extends CustomActionOP {
    position?: CustomHeaderActionPositionOP;
}
export interface ObjectPageHeaderAction {
    /**
     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)
     */
    afterExecution?: ActionAfterExecutionConfigurationObjectPageHeader;
}
export interface ObjectPageHeaderActions {
    [id: string]: ObjectPageHeaderAction | CustomHeaderActionOP;
}
/**
 * Header
 * @isViewNode true
 */
export interface ObjectPageHeader {
    /**
     * Set editableHeaderContent to true to make the header fields editable.
     */
    editableHeaderContent?: boolean;
    /**
     * Set showRelatedApps to true to show the navigation button for related apps.
     */
    showRelatedApps?: boolean;
    /**
     * Set visible to true to make the header visible.
     */
    visible?: boolean;
    /**
     * Set visible to true to make the anchor bar visible.
     */
    anchorBarVisible?: boolean;
    actions?: ObjectPageHeaderActions;
    sections?: HeaderSections;
}
//# sourceMappingURL=ObjectPageHeader.d.ts.map